#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov 25 22:42:28 2019

@author: home
"""
import pandas as pd
import numpy as np
from sklearn.naive_bayes import MultinomialNB
from sklearn.naive_bayes import BernoulliNB
from sklearn.metrics import accuracy_score

#-------Inputs

df = pd.read.csv('processed.csv')
msk = np.random.rand(len(df)) < 0.8
train_data = df[msk]
test_data = df[~msk]

#enter actionable column name here
actionable_name = ''


#----------

# seperate the independent and target variable on training data
train_x = train_data.drop(columns=[actionable_name],axis=1)
train_y = train_data[actionable_name]

# seperate the independent and target variable on testing data
test_x = test_data.drop(columns=[actionable_name],axis=1)
test_y = test_data[actionable_name]

#-------------Bernoulli Distribution

model = BernoulliNB()

# fit the model with the training data
model.fit(train_x,train_y)

# predict the target on the train dataset
bern_predict_train = model.predict(train_x)

# Accuray Score on train dataset
bern_accuracy_train = accuracy_score(train_y,bern_predict_train)

# predict the target on the test dataset
bern_predict_test = model.predict(test_x)

# Accuracy Score on test dataset
bern_accuracy_test = accuracy_score(test_y,bern_predict_test)

#--------------Multinominal distribution


multi_model = MultinomialNB()

multi_model.fit(train_x,train_y)

multi_predict_train = multi_model.predict(train_x)

multi_accuracy_train = accuracy_score(train_y,multi_predict_train)

multi_predict_test = multi_model.predict(test_x)

multi_accuracy_test = accuracy_score(test_y,multi_predict_test)


#-------Print statements

print('Bernoulli Target on train data',bern_predict_train) 
print('Bernoulli accuracy_score on train dataset : ', bern_accuracy_train)
print('Bernoulli Target on test data',bern_predict_test) 
print('Bernoulli accuracy_score on test dataset : ', bern_accuracy_test)
print('-----------------------------------------')
print('Multinomial Target on train data',multi_predict_train) 
print('Multinomial accuracy_score on train dataset : ', multi_accuracy_train)
print('Multinomial Target on test data',multi_predict_test) 
print('Multinomial accuracy_score on test dataset : ', multi_accuracy_test)





